%clearfix {
  &:after {
    content: "";
    display: block;
    clear: both;
  }
}


%justify-menu {
  width: 100%;
  display: block;
  text-align: justify;
  font-size: 0;

  &:after{
    content:"";
    width: 100%;
    height: 0;
    display: inline-block;
  }

  > *{
    font-size: 16px;
  }
}


/////sass math
////
/// @group layout
////

/// An approximation of π.
/// @access private
/// @return {Float}
/// @link https://github.com/at-import/Sassy-math/blob/master/sass/math.scss#L8 SassyMath
@function pi() {
  @return 3.1415926535897932384626433832795028841971693993751;
}

/// Factorial function.
/// @access private
/// @param {Number} $number
/// @return {Number}
/// @link https://unindented.org/articles/trigonometry-in-sass/ Trigonometry in Sass
@function fact($number) {
  $value: 1;

  @if $number > 0 {
    @for $i from 1 through $number {
      $value: $value * $i;
    }
  }

  @return $value;
}

/// Power function.
/// @access private
/// @param {Number} $number
/// @param {Number} $exp
/// @link https://unindented.org/articles/trigonometry-in-sass/ Trigonometry in Sass
@function pow($number, $exp) {
  $value: 1;

  @if $exp > 0 {
    @for $i from 1 through $exp {
      $value: $value * $number;
    }
  } @else if $exp < 0 {
    @for $i from 1 through -$exp {
      $value: $value / $number;
    }
  }

  @return $value;
}

/// Sine function.
/// @access private
/// @param {Angle} $angle - Angle expressed in degrees
/// @return {Number}
/// @link https://unindented.org/articles/trigonometry-in-sass/ Trigonometry in Sass
@function sin($angle) {
  $sin: 0;
  $rad: $angle * pi() * 1rad / 180deg;
  $angle: $rad / ($rad * 0 + 1);

  @for $i from 0 through 10 {
    $sin: $sin + pow(-1, $i) * pow($angle, (2 * $i + 1)) / fact(2 * $i + 1);
  }

  @return $sin;
}

/// Square root function.
/// @access private
/// @param {Number} $number
/// @return {Number}
/// @link https://github.com/at-import/Sassy-math/blob/master/sass/math.scss#L259-L266 SassyMath
@function sqrt($number) {
  $guess: 4; // Guaranteed to be random: http://xkcd.com/221/
  $root: $guess;

  @for $i from 1 through 50 {
    $root: $root - (pow($root, 2) - $number) / (2 * $root);
  }

  @return $root;
}

///

//tilted angles

@function get-tilted-height($angle) {
  $a: (100% / 1%);
  $A: (90deg - $angle);
  $c: ($a / sin($A));
  $b: sqrt(pow($c, 2) - pow($a, 2));

  @return (abs($b) * 1%);
}

@mixin tilted($angle, $color, $position: 'bottom', $pseudo: 'before') {
  $height: get-tilted-height($angle);

  position: relative;
  background-color: $color;

  &::#{$pseudo} {
    content: '';
    padding-top: $height;
    position: absolute;
    left: 0;
    right: 0;

    @if ($position == 'top') {
      bottom: 100%;
      background-image: linear-gradient($angle, $color 50%, transparent 50%);
    } @else {
      top: 100%;
      background-image: linear-gradient($angle, transparent 50%, $color 50%);
    }
  }
}


//responsive

@function rem($px) {
  @return $px / 16px + 0rem;
}


@mixin desktop {
  @media screen and (max-width: 1200px) {
    @content;
  }
}

@mixin laptop {
  @media screen and (max-width: 992px) {
    @content;
  }
}

@mixin tablets {
  @media screen and (max-width: 768px) {
    @content;
  }
}

@mixin phones {
  @media screen and (max-width: 568px) {
    @content;
  }
}

@mixin xs-phones {
  @media screen and (max-width: 480px) {
    @content;
  }
}